@model PFD_PROCEDIMIENTOS

@{
    ViewBag.Title = "Actualizar datos de Formulario";
}

<div class="row">
    <div class="col-sm-12">
        <hgroup class="title">
            <h1>@ViewBag.Title</h1>
        </hgroup>
        <div class="well">
            @using (Html.BeginForm("Edit", "Forms", FormMethod.Post, new { @class = "GlobalForm" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true)
                @Html.HiddenFor(m => m.ESTANDARIZADO)

                <fieldset>
                    <legend>Datos del formulario</legend>
                    @Html.HiddenFor(m => m.ID)
                    <div class="row">
                        <div class="form-group col-sm-6 col-xs-12">
                            @Html.CLabelFor(m => m.NOMBRE)
                            @Html.CTextBoxFor(m => m.NOMBRE)
                            @Html.CValidationMessageFor(m => m.NOMBRE)
                        </div>
                        <div class="form-group col-sm-6 col-xs-12">
                            @Html.CLabelFor(m => m.PROCEDIMIENTO)
                            @Html.CTextBoxFor(m => m.PROCEDIMIENTO, new { @class = "upperCase", maxlength = "200" })
                            @Html.CValidationMessageFor(m => m.PROCEDIMIENTO)
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-sm-6 col-xs-12">
                            @Html.CLabelFor(m => m.DESCRIPCION)
                            @Html.CTextAreaFor(m => m.DESCRIPCION, new { rows = 4 })
                            @Html.CValidationMessageFor(m => m.DESCRIPCION)
                        </div>
                        <div class="form-group col-sm-6 col-xs-12">
                            <label class="control-label">Parametros del procedimiento</label>
                            @Html.CTextArea("Parameters", new { @rows = 4, @readonly = "true", @class = "control-readonly" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-sm-6 col-xs-12">
                            @Html.CLabelFor(m => m.HABILITADO, new { @class = "w100" })
                            @Html.CheckBoxFor(m => m.Enabled, new { @class = "switchInput" })
                        </div>
                    </div>

                    <h4 class="section-subtitle ">Par&aacute;metros</h4>
                    <div class="row">
                        <div class="col-sm-12">
                            <input type="button" data-target="#createParameterModal" class="btn btn-success  fr mb10 addParameter" value="Agregar" />
                        </div>
                        @{ var pModel = new ParameterViewModel(); }
                        <div class="table-responsive">
                            @Html.Hidden("rowCount", 0, new { @class = "rowCount" })
                            @Html.Hidden("GetParamsDataUrl", Url.Action("GetParametersInfo", "Forms"))
                            @Html.Hidden("DeleteParamsUrl", Url.Action("DeleteParameters", "Forms", new { procedureID = Model.ID }))
                            @Html.Hidden("DeleteParamUrl", Url.Action("DeleteParameter", "Forms"))
                            @Html.Hidden("EditParamsTableUrl", Url.Action("UpdateParamsTable", "Forms", new { procedureID = Model.ID }))
                            @Html.Hidden("EditParamsUrl", Url.Action("EditParameter", "Forms"))
                            @Html.Hidden("AddParamUrl", Url.Action("AddParameter", "Forms", new { procedureID = Model.ID }))
                            <div class="col-sm-12">
                                <table class="table table-bordered table-striped table-hover parametersTable">
                                    <thead>
                                        <tr class="success">
                                            <th>@Html.DisplayNameFor(m => pModel.NOMBRE)</th>
                                            <th>@Html.DisplayNameFor(m => pModel.PARAMETRO)</th>
                                            <th>@Html.DisplayNameFor(m => pModel.REQUERIDO)</th>
                                            <th>@Html.DisplayNameFor(m => pModel.TIPO)</th>
                                            <th>Opciones</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in Model.PFD_PARAMETROS)
                                        {
                                            <tr>
                                                <td>@Html.DisplayFor(i => item.NOMBRE)</td>
                                                <td>@Html.DisplayFor(i => item.PARAMETRO)</td>
                                                <td>@(item.Required ? "SI" : "NO")</td>
                                                <td>@(((DataTypes)((int)item.TIPO)).ToString().Replace('_', ' '))</td>
                                                <td>
                                                    @Html.ActionLinkImage("pencil", "EditParameter", "Editar", new { id = item.ID }, new { @class = "iconLink editParam editAction", data_url = Url.Action("EditParameter", new { id = item.ID }) })
                                                    @Html.ActionLinkImage("remove-sign", "DeleteParameter", "Eliminar", new { id = item.ID }, new { @class = "iconLink deleteParam deleteAction", data_url = Url.Action("DeleteParameter", new { id = item.ID }) })
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <label>&nbsp;</label><br />
                    </div>

                    <div class="row form-group col-sm-12">
                        <input type="submit" class="btn btn-primary ml2" value="Guardar" />
                        @Html.ActionLink("Cancelar", "Index", null, new { @class = "btn btn-default" })
                    </div>
                </fieldset>
            }
        </div>
    </div>
</div>

<div class="parameterCreateModal">
    @Html.Partial("_ParameterPartial", new ParameterViewModel())
</div>
<div class="parameterEditModal">
    <!-- Holder para el edit de los parametros. -->
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            $.fn.EditForm();
        });
    </script>
}
